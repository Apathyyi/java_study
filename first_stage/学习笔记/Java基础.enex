<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20201113T073002Z" application="Evernote/Windows" version="6.x">
<note><title>Java基础</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><span style="font-size: 13pt;">Java和JavaScript的比较</span></div><div><font style="font-size: 10pt;"><br/></font></div><div><span style="font-size: 10pt;">1、java是面向对象，对象几乎靠自己设计。js是基于对象和事件的脚本语言。</span></div><div><span style="font-size: 10pt;">2、java是代码需要经过编译才能在虚拟机上运行，js代码是浏览器解释运行</span></div><div><span style="font-size: 10pt;">3、java所有变量需要声明，js的不需要</span></div><div><font style="font-size: 10pt;"><br/></font></div><div><span style="font-size: 13pt;">Integer和int的区别</span></div><div><span style="font-size: 10pt;">int是基础数据类型，integer是int的包装类型。包装后就可以当成对象来操作。</span></div><div><font style="font-size: 10pt;"><br/></font></div><div><font style="font-size: 10pt;"><br/></font></div><div><span style="font-size: 13pt;">String和StringBuffer的区别</span></div><div><span style="font-size: 10pt;">String类提供了数值不可变的字符串，看起来让字符串数值改变的操作其实都是new了新的字符串。StringBuffer类提供的字符串可以进行修改。</span></div><div><font style="font-size: 10pt;"><br/></font></div><div><font style="font-size: 10pt;"><br/></font></div><div><span style="font-size: 13pt;">Array和ArrayList的区别</span></div><div>array可以包含基本类型和对象类型，ArrayList只能包含对象类型。</div><div>array大小固定，ArrayList大小动态变化。</div><div><br/></div><div><br/></div><div><span style="font-size: 13pt;">4-3.6=0.400000001为什么</span></div><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(51, 51, 51); font-family: arial, STHeiti, &quot;Microsoft YaHei&quot;, 宋体; font-variant-caps: normal; font-variant-ligatures: normal;">在二进制系统中无法精确地表示分数1/10，这就好像十进制无法精确地表示分数1/3一样。</span></div><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><br/></span></div><div><br/></div><div><span style="font-size: 13pt;">Lambda表达式</span></div><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(51, 51, 51); font-family: arial, STHeiti, &quot;Microsoft YaHei&quot;, 宋体; font-variant-caps: normal; font-variant-ligatures: normal;">Lambda 表达式 − Lambda允许把函数作为一个方法的参数（函数作为参数传递进方法中）</span></div><div><span style="font-size: 11pt; color: rgb(51, 51, 51); font-family: arial;">优点：简洁，容易并行计算</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><br/></div><div><span style="font-size: 13pt;">为什么重写equals一定要重写hashcode？</span></div><div><span style="font-size: 11pt; color: rgb(51, 51, 51); font-family: arial;">默认object的hashcode方法是根据对象的内存地址经哈希算法得来。根据规则两个对象相等则hashcode一定相等，但是重写了equals后两个内存地址不相等的对象，key的string相等，根据规则应该计算出相同hashcode，但是默认的hashcode方法计算肯定不相等，所以要重写。</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 13pt;">static资源是在什么时候加载的</span></div><div><span style="font-size: 11pt; color: rgb(51, 51, 51); font-family: arial;">static静态资源是在类加载的时候获取，这个时候是没有对象资源的，所以静态的只能静态的资源，非静态的能访问全部（静态+非静态）</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;">final修饰的类不能被继承。final修饰的方法可以被继承和重载，不能被重写。final修饰的变量不能被重新赋值</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><font style="font-size: 13pt;">Java中Collection和Collections的区别</font></div><div><span style="font-size: 11pt;">java.utils.collection是集合<font style="color: rgb(255, 0, 0);">接口</font>（集合类的一个顶级接口）。它提供了对集合对象进行基本操作的通用接口方法。常见的继承接口有List和Set</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;">Collections是JDK提供的<font style="color: rgb(255, 0, 0);">工具类</font>同样位于java.util包中。能方便的操作各种集合，其提供的方法详见：</span> <span style="font-size: 11pt;"><a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1299919855943714">https://www.liaoxuefeng.com/wiki/1252599548343744/1299919855943714</a></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;"><br/></span></div></en-note>]]></content><created>20200312T055253Z</created><updated>20200925T065938Z</updated><note-attributes><author>覃杨炀</author><source>desktop.win</source><source-url>https://www.nowcoder.com/questionTerminal/f4b5917f913d4366a99aa05f83e2c9c1</source-url><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
